//绝大部分情况下，我们使用链接器提供的默认链接规则对目标文件进行链接。这在一般情况下是没有问题的，但对于一些特殊要求的程序，比如操作系统、BIOS或者一些在没有操作系统
//的情况下运行的程序（如引导程序Boot Loader，或者嵌入式系统的程序，或者有一些脱离操作系统的硬盘分区软件PQMagic等），以及另外一些需要特殊的链接过程的程序，如一些内核
//驱动程序等，它们往往受限于一些特殊的环境，特别是某些硬件条件的限制，往往对程序的各个段的地址有着特殊的要求。
//操作系统内核，从本质上来讲，它本身也是一个程序，比如Windows的内核ntoskrnl.exe就是一个我们平常看到的PE文件，它的位置位于\WINDOWS\system32\ntoskernl.exe。
//ld链接脚本语法
//命令语句
//ENTRY(symbol)  指定符号symbol的值为入口地址。入口地址即进程执行的第一条用户空间的指令在进程地址空间的地址，它被指定在ELF文件头Elf32_Ehdr的e_entry成员中。
//ld有多种方法可以设置进程入口地址，它们之间的优先级按以下顺序排列，编号越靠前，优先级越高。
//1. ld命令行的-e选项
//2. 链接脚本的ENTRY(symbol)
//3. 如果定义了_start符号，使用_start符号值
//4. 如果存在.text段，使用.text段的第一字节的地址
//5. 使用值0
//STARTUP(filename) 将文件filename作为链接过程中的第一个输入文件。
//SEARCH_DIR(path)  将路径path加入到ld链接器的库查找目录。ld会根据指定的目录去查找相应的库。跟"-Lpath"命令有着相同的作用。
//INPUT(file,file,...)  INPUT(file file ...) 将指定文件作为链接过程中的输入文件。
//INCLUDE filename 将指定文件包含进本链接脚本。
//PROVIDE(symbol) 在链接脚本中定义某个符号。该符号可以在程序中被引用。
//BFD库
//
